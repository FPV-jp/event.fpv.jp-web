# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: ["main", dev]
  pull_request:
    branches: ["main", dev]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3

      - name: (Env) Fix .env for production
        if: github.ref == 'refs/heads/main'
        run: |
          echo "${{ secrets.PROD_ENV }}" > .env

      - name: (Env) Fix .env for development
        if: github.ref == 'refs/heads/dev'
        run: |
          echo "${{ secrets.DEV_ENV }}" > .env

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - run: yarn
      - run: yarn build
      # - run: yarn test .

      - name: (Deploy prod) Copy file via ssh event.fpv.jp
        if: github.ref == 'refs/heads/main'
        uses: appleboy/scp-action@v0.1.4
        with:
          host: v2008.coreserver.jp
          username: fpv
          port: 22
          key: ${{ secrets.KEY }}
          source: private_html
          target: /home/fpv/domains/event.fpv.jp/
          overwrite: true

      - name: (Deploy dev) Copy file via ssh fpv.v2008.coreserver.jp
        if: github.ref == 'refs/heads/dev'
        uses: appleboy/scp-action@v0.1.4
        with:
          host: v2008.coreserver.jp
          username: fpv
          port: 22
          key: ${{ secrets.KEY }}
          source: private_html
          target: /home/fpv/domains/fpv.v2008.coreserver.jp/
          overwrite: true
